---
name: Validate Manifests

on:
  workflow_call:
    inputs:
      git_repo:
        description: "The service repository that contains the manifests (e.g. stuartapp/dx2-demo)"
        required: true
        type: string
      git_pr_branch:
        description: "The branch with manifests changes"
        required: true
        type: string
      git_main_branch:
        description: "The main branch of the repository (default: main)"
        required: false
        type: string
        default: main
      manifests_dir:
        description: "Path of manifests directory in the git repository"
        required: false
        type: string
        default: manifests
      service_config_files:
        description: "The configuration files for the service to be synced (relative to the manifests directory) separated by comma"
        required: true
        type: string
      environments:
        description: "Environments (separated by comma) that these changes will be tested"
        required: true
        type: string
    secrets:
      gh_token:
        required: true
      docker_user:
        required: true
      docker_pass:
        required: true

env:
  DOCKER_REGISTRY_USER: ${{ secrets.docker_user }}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.docker_pass }}

jobs:
  sync-manifests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        name: Checkout k8s-manifests
        with:
          repository: stuartapp/k8s-manifests
          ref: main
          token: ${{ secrets.gh_token }}

      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.git_repo }}
          path: service
          token: ${{ secrets.gh_token }}
          ref: ${{ inputs.git_pr_branch }}
          fetch-depth: 0

      - name: Apply changes
        working-directory: service
        run: git merge origin/${{ inputs.git_main_branch }}

      - name: Sync manifests
        id: sync-manifests
        env:
          ENVIRONMENTS: ${{ inputs.environments }}
          DATA_VALUES_FILES: ${{ inputs.service_config_files }}
        run: |
          cp -r service/${{ inputs.manifests_dir }} .manifests
          make docker-login sync-manifests
          sudo rm -rf .manifests

      - name: Cache all manifests
        uses: actions/cache@v3
        env:
          cache-name: manifests
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}

  check-policies:
    needs: sync-manifests
    runs-on: self-hosted
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: Validate kyverno policies
        working-directory: .
        if: steps.retrieve-manifests.outputs.cache-hit == 'true'
        run: make docker-login validate-policies

  run-tests:
    needs: sync-manifests
    runs-on: self-hosted
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: Run validator
        working-directory: .
        if: steps.retrieve-manifests.outputs.cache-hit == 'true'
        run: make docker-login validate-manifests

  validate-schemas-beta:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-beta
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/beta ]; then
            echo "Manifests for beta were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/beta/
          else
            echo "Manifests for beta not found, skipping validation"
          fi

  validate-schemas-dev:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-dev
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/dev ]; then
            echo "Manifests for dev were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/dev/
          else
            echo "Manifests for dev not found, skipping validation"
          fi

  validate-schemas-dispload:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-dispload
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/dispload ]; then
            echo "Manifests for dispload were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/dispload/
          else
            echo "Manifests for dispload not found, skipping validation"
          fi

  validate-schemas-mgmt:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-mgmt
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/mgmt ]; then
            echo "Manifests for mgmt were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/mgmt/
          else
            echo "Manifests for mgmt not found, skipping validation"
          fi

  validate-schemas-prod:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-prod
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/prod ]; then
            echo "Manifests for prod were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/prod/
          else
            echo "Manifests for prod not found, skipping validation"
          fi

  validate-schemas-qa:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-qa
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/qa ]; then
            echo "Manifests for qa were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/qa/
          else
            echo "Manifests for qa not found, skipping validation"
          fi

  validate-schemas-sandbox:
    needs: sync-manifests
    runs-on:
      - self-hosted
      - stuart-sandbox
    steps:
      - name: Retrieve k8s-manifests
        id: retrieve-manifests
        uses: actions/cache@v3
        with:
          path: .
          key: manifests-${{ github.run_id }}-${{ github.run_number }}
      - name: install kubeclt
        uses: azure/setup-kubectl@v2.0
      - name: Kubectl dry-run
        working-directory: .
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          if [ -d .changed_manifests/sandbox ]; then
            echo "Manifests for sandbox were found, running validation"
            ls -R .changed_manifests/
            for FILE in $(find .changed_manifests -name '*.yaml'); do
              yq -i '.metadata.namespace = "dry-run-ns"' "$FILE"
            done
            kubectl apply --validate=true --dry-run=server --server-side --force-conflicts -R -f .changed_manifests/sandbox/
          else
            echo "Manifests for sandbox not found, skipping validation"
          fi
